project(tcp-homework)
cmake_minimum_required(VERSION 2.8)
aux_source_directory(. SRC_LIST)
set(Boost_USE_STATIC_LIBS OFF)
set(Boost_USE_MULTITHREADED ON)
set(BOOST_ROOT "boost2")
find_package(Boost COMPONENTS signals REQUIRED)
include_directories(http-parser src/tcp-server src/http-server src/examples)
include_directories(${Boost_INCLUDE_DIRS})
set(CMAKE_CXX_FLAGS "-O2 -Wall -pthread -std=c++11")
add_library(tcp_server STATIC src/tcp-server/tcp_server.cpp src/tcp-server/tcp_socket.cpp src/tcp-server/epoll_handler.cpp src/tcp-server/tcp_exception.cpp)
add_library(tcp_client STATIC src/tcp-server/tcp_client.cpp src/tcp-server/tcp_socket.cpp src/tcp-server/epoll_handler.cpp src/tcp-server/tcp_exception.cpp)
add_library(http_response STATIC src/http-server/http_response.cpp)
add_library(http_request STATIC src/http-server/http_request.cpp)
add_library(http_connection STATIC src/http-server/http_connection.cpp)
add_library(http_parser STATIC http-parser/http_parser.c)
add_custom_target(http_server_api SOURCES src/http-server/http_server_api.h)
add_executable(tcp_server_exec src/examples/main_server.cpp)
add_executable(tcp_client_exec src/examples/main_client.cpp)
target_link_libraries(tcp_server_exec tcp_server ${Boost_LIBRARIES})
target_link_libraries(tcp_client_exec tcp_client ${Boost_LIBRARIES})
